--===============================================
--              17/02/2025
--              PROCEDURES
--===============================================
-- Procedure pe um conjunto de instruções SQL que podem
--ser executadas em conjunto.

CREATE TABLE PROCEDURES.TIMES (
ID INTEGER PRIMARY KEY,
NOME VARCHAR(50)
);

CREATE TABLE PROCEDURES.PARTIDA (
ID INTEGER PRIMARY KEY,
TIMES_1 INTEGER,
TIMES_2 INTEGER,
TIMES_1_GOLS INTEGER,
TIMES_2_GOLS INTEGER,
FOREIGN KEY(TIMES_1) REFERENCES TIMES(ID),
FOREIGN KEY(TIMES_2) REFERENCES TIMES(ID)
);

INSERT INTO PROCEDURES.TIMES(ID, NOME) VALUES
(1,'CORINTHIANS'),
(2,'SÃO PAULO'),
(3,'CRUZEIRO'),
(4,'ATLETICO MINEIRO'),
(5,'PALMEIRAS');

INSERT INTO PROCEDURES.PARTIDA(ID, TIMES_1, TIMES_2, TIMES_1_GOLS, TIMES_2_GOLS)
VALUES
(1,4,1,0,4),
(2,3,2,0,1),
(3,1,3,3,0),
(4,3,4,0,1),
(5,1,2,0,0),
(6,2,4,2,2),
(7,1,5,1,2),
(8,5,2,1,2);

CREATE OR REPLACE PROCEDURE PROCEDURES.INSERIR_PARTIDA(
    IN TIMES_1 INTEGER, 
    IN TIMES_2 INTEGER,
    IN TIMES_1_GOLS INTEGER, 
    IN TIMES_2_GOLS INTEGER
)
LANGUAGE PLPGSQL 
AS $$
BEGIN 
    INSERT INTO PROCEDURES.PARTIDA(TIMES_1, TIMES_2, TIMES_1_GOLS, TIMES_2_GOLS)
    VALUES (TIMES_1, TIMES_2, TIMES_1_GOLS, TIMES_2_GOLS);
END $$;


-- EXECUTANDO A PROCEDURE
CALL PROCEDURES.INSERIR_PARTIDA(1,2,1,2);

-- UPDATE
CREATE PROCEDURE PROCEDURES.UPDATE_TIMES(
    ID_LOCAL INTEGER,
    NOME VARCHAR(50)
)
AS $$
BEGIN   
    UPDATE PROCEDURES.TIMES SET NOME = NOME WHERE ID = ID_LOCAL;
    IF NOT FOUND THEN
        RAISE EXCEPTION 'TIME NÃO ENCONTRADO';
    END IF;
END;
$$ LANGUAGE PLPGSQL

CALL PROCEDURES.UPDATE_TIMES(1,'FLAMENGO');

-- AS PROCEDURES SÃO SER ALTERADAS AS SUAS ASSINATURAS
-- COMO OS PARAMETROS E O RETORNO, MAS CORPO  PODE

DROP PROCEDURE PROCEDURES.UPDATE_TIMES;

-- FAÇA UMA PROCEDURE DE EXCLUIR PARTIDA, COM EXCEÇÃO CASO NAO ENCONTRE A PARTIDA
CREATE OR REPLACE PROCEDURE PROCEDURES.EXCLUIR_PARTIDA(
    IN ID_LOCAL INTEGER
)
AS $$
BEGIN 
    DELETE FROM PROCEDURES.PARTIDA WHERE ID = ID_LOCAL;
    IF NOT FOUND THEN
        RAISE EXCEPTION 'PARTIDA NÃO ENCONTRADA';
    END IF;
END;
$$ LANGUAGE PLPGSQL;

CALL PROCEDURES.EXCLUIR_PARTIDA(1);
CALL PROCEDURES.EXCLUIR_PARTIDA(77);


SELECT * FROM PROCEDURES.PARTIDA;