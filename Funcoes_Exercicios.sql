--=============================================
--           FUNÇÕES - EXERCÍCIOS
--              14/02/2025-- =============================================
-- INSERINDO OS DADOS
-- =============================================

--=============================================


CREATE TABLE EMPREGADO (
    NOME VARCHAR(50),
    ENDERECO VARCHAR(255),
    CPF INT PRIMARY KEY NOT NULL,
    DATA_NASCIMENTO DATE,
    SEXO CHAR(10),
    CART_TRABALHO INT,
    SALARIO FLOAT,
    CPF_SUP INT
);

ALTER TABLE EMPREGADO ADD COLUMN FK_NUMDEP INT,
ADD CONSTRAINT FK_EMPREGADO_NUMDEP
FOREIGN KEY (FK_NUMDEP) REFERENCES DEPARTAMENTO(NUMDEP);



CREATE TABLE DEPARTAMENTO (
    NOME_DEP VARCHAR(50),
    NUMDEP INT PRIMARY KEY NOT NULL,
    CPF_GERENTE INT,
    DATA_INICIO_GERENTE DATE,
    FOREIGN KEY (CPF_GERENTE) REFERENCES EMPREGADO(CPF)
);

CREATE TABLE PROJETO (
    NOME_PROJETO VARCHAR(50),
    NUM_PROJETO INT PRIMARY KEY NOT NULL,
    LOCALIZACAO VARCHAR(50),
    NUMDEP INT,
    FOREIGN KEY (NUMDEP) REFERENCES DEPARTAMENTO(NUMDEP)
);

CREATE TABLE DEPENDENTE (
    ID_DEPENDENTE INT PRIMARY KEY NOT NULL,
    CPF_EMPREGADO INT,
    NOME_DEPENDENTE VARCHAR(50),
    SEXO CHAR(10),
    PARENTESCO VARCHAR(50),
    FOREIGN KEY (CPF_EMPREGADO) REFERENCES EMPREGADO(CPF)
);

CREATE TABLE TRABALHA_EM (
    CPF INT,
    NUM_PROJETO INT,
    HORAS_SEMANA INT,
    FOREIGN KEY (CPF) REFERENCES EMPREGADO(CPF),
    FOREIGN KEY (NUM_PROJETO) REFERENCES PROJETO(NUM_PROJETO)
);
-- =============================================
-- INSERINDO OS DADOS
-- =============================================
INSERT INTO DEPARTAMENTO VALUES ('DEP1', 1, NULL, '1990-01-01');
INSERT INTO DEPARTAMENTO VALUES ('DEP2', 2, NULL, '1990-01-01');
INSERT INTO DEPARTAMENTO VALUES ('DEP3', 3, NULL, '1990-01-01');

INSERT INTO EMPREGADO VALUES ('JOAO', 'RUA 1', 123, '1990-01-01', 'M', 123, 1000, 1, NULL);
INSERT INTO EMPREGADO VALUES ('MARIA', 'RUA 2', 456, '1990-01-01', 'F', 456, 2000, 2, NULL);
INSERT INTO EMPREGADO VALUES ('JOSE', 'RUA 3', 789, '1990-01-01', 'M', 789, 3000, 3, NULL);

INSERT INTO PROJETO VALUES ('PROJ1', 1, 'LOCAL1', 1);
INSERT INTO PROJETO VALUES ('PROJ2', 2, 'LOCAL2', 2);
INSERT INTO PROJETO VALUES ('PROJ3', 3, 'LOCAL3', 3);

INSERT INTO DEPENDENTE VALUES (1, 123, 'DEP1', 'M', 'FILHO');
INSERT INTO DEPENDENTE VALUES (2, 456, 'DEP2', 'F', 'FILHA');
INSERT INTO DEPENDENTE VALUES (3, 789, 'DEP3', 'M', 'FILHO');

INSERT INTO TRABALHA_EM VALUES (123, 1, 40);
INSERT INTO TRABALHA_EM VALUES (456, 2, 40);
INSERT INTO TRABALHA_EM VALUES (789, 3, 40);

-- =============================================
-- UPDATES
-- =============================================
UPDATE DEPARTAMENTO SET CPF_GERENTE = 123 WHERE NUMDEP = 1;
UPDATE DEPARTAMENTO SET CPF_GERENTE = 456 WHERE NUMDEP = 2;
UPDATE DEPARTAMENTO SET CPF_GERENTE = 789 WHERE NUMDEP = 3;

UPDATE EMPREGADO SET FK_NUMDEP = 1 WHERE CPF = 123;
UPDATE EMPREGADO SET FK_NUMDEP = 2 WHERE CPF = 456;
UPDATE EMPREGADO SET FK_NUMDEP = 3 WHERE CPF = 789;

-- =============================================-
-- EXERCÍCIOS
-- =============================================
-- 1. FUNÇÃO QUE RETORNA O SALARIO DE UM EMPREGADO DADO O CPF
CREATE OR REPLACE FUNCTION SALARIO_EMPREGADO(CPF_EMPREGADO INT) RETURNS FLOAT AS $$
DECLARE
    E_SALARIO FLOAT;
BEGIN
    SELECT SALARIO INTO E_SALARIO FROM EMPREGADO WHERE CPF = CPF_EMPREGADO;
    RETURN E_SALARIO;
END;
$$ LANGUAGE PLPGSQL;

SELECT SALARIO_EMPREGADO(123);
SELECT SALARIO_EMPREGADO(456);
SELECT SALARIO_EMPREGADO(789);

-- 2. FUNÇÃO QUE RETORNA O NOME DO DEPARTAMENTO DE UM EMPREGADO DADO O CPF
CREATE OR REPLACE FUNCTION NOME_DEPARTAMENTO(CPF_EMPREGADO INT) RETURNS VARCHAR AS $$
DECLARE
    E_NOME_DEP VARCHAR(100);
BEGIN 
    SELECT NOME_DEP INTO E_NOME_DEP 
    FROM DEPARTAMENTO 
    WHERE NUMDEP = (SELECT FK_NUMDEP FROM EMPREGADO WHERE CPF = CPF_EMPREGADO);
    RETURN E_NOME_DEP;
END;
$$ LANGUAGE PLPGSQL;

SELECT NOME_DEPARTAMENTO(123);
SELECT NOME_DEPARTAMENTO(456);
SELECT NOME_DEPARTAMENTO(789);

-- 3. FUNÇÃO QUE RETORNA O NOME DO GERENTE DE UM DEPARTAMENTO DADO O NUMERO DO DEPARTAMENTO 
CREATE OR REPLACE FUNCTION GERENTE_DEPARTAMENTO(NUMDEP_GERENTE INT) RETURNS VARCHAR AS $$
DECLARE
    G_NOME VARCHAR(100);
BEGIN
    SELECT NOME INTO G_NOME 
    FROM EMPREGADO 
    WHERE CPF = (SELECT CPF_GERENTE FROM DEPARTAMENTO WHERE NUMDEP = NUMDEP_GERENTE); 
    RETURN G_NOME;
END;
$$ LANGUAGE PLPGSQL;

SELECT GERENTE_DEPARTAMENTO(1);

-- 4. FUNÇÃO QUE RETORNA O NOME DO PROJETO DE UM EMPREGADO DADO O CPF
CREATE OR REPLACE FUNCTION NOME_PROJETO(CPF INT) RETURNS VARCHAR AS $$
DECLARE
    P_NOME VARCHAR(100);
BEGIN
    SELECT NUMDEP INTO P_NOME
    FROM TRABALHA_EM
    WHERE NUMDEP = CPF_EMPREGADO;
    RETURN P_NOME;
END;
$$ LANGUAGE PLPGSQL;

DROP FUNCTION NOME_PROJETO;

SELECT NOME_PROJETO(123);

-- 5. FUNÇÃO QUE RETORNA O NOME DO DEPENDENTE DE UM EMPREGADO DADO O CPF    

-- 6. FUNÇÃO QUE RETORNA O NOME DO GERENTE DE UM EMPREGADO DADO O CPF

-- 7. FUNÇÃO QUE RETORNA A QUANTIDADE DE HORAS QUE UM EMPREGADO TRABALHA EM UM PROJETO

-- 8. FUNÇÃO COM EXCEPTION QUE RETORNA O SALARIO DE UM EMPREGADO DADO O CPF 
